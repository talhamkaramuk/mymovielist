{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\Web\\\\movielist\\\\src\\\\context\\\\MovieContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { movieReducer } from '../reducers/movieReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\n\nconst MovieContextProvider = props => {\n  _s();\n\n  const [movies, dispatch] = useReducer(movieReducer, []);\n  useEffect(() => {\n    localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      movies,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieContextProvider, \"YhDwyrJoOWAEpluR70LIPX0G4G8=\");\n\n_c = MovieContextProvider;\nexport default MovieContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieContextProvider\");","map":{"version":3,"sources":["C:/Users/Talha/Desktop/Web/movielist/src/context/MovieContext.js"],"names":["React","createContext","useReducer","useEffect","movieReducer","MovieContext","MovieContextProvider","props","movies","dispatch","localStorage","setItem","JSON","stringify","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEP,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBP,UAAU,CAACE,YAAD,EAAe,EAAf,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAA/B;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAA9B;AAAA,cACKF,KAAK,CAACO;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAbD;;GAAMR,oB;;KAAAA,oB;AAeN,eAAeA,oBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { movieReducer } from '../reducers/movieReducer';\r\n\r\nexport const MovieContext = createContext();\r\n\r\nconst MovieContextProvider = (props) => {\r\n    const [movies, dispatch] = useReducer(movieReducer, []);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('movies', JSON.stringify(movies))\r\n    }, [movies])\r\n\r\n    return (\r\n        <MovieContext.Provider value={{ movies, dispatch }}>\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default MovieContextProvider;"]},"metadata":{},"sourceType":"module"}